{
  "openapi": "3.1.0",
  "info": {
    "title": "NEURONEX",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Neuron"
    },
    {
      "name": "Neuron/configuration"
    },
    {
      "name": "Neuron/metrics"
    },
    {
      "name": "Neuron/rw"
    }
  ],
  "paths": {
    "/api/neuron/login": {
      "post": {
        "summary": "Login",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Login",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "user  account name",
            "required": false,
            "example": "admin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pass",
            "in": "query",
            "description": "user  account password",
            "required": false,
            "example": "0000",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-token"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzcyODcxNjMsImlhdCI6MTYzNzIwMDc2MywiaXNzIjoiRU1RIFRlY2hub2xvZ2llcyBDby4sIEx0ZCBBbGwgcmlnaHRzIHJlc2VydmVkLiIsInBhc3MiOiIwMDAwIiwidXNlciI6ImFkbWluIn0.2EZzPC9djErrCeYNrK2av0smh-eKxDYeyu7cW4MyknI"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 token err",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "missing token",
                    "value": {
                      "error": 1004
                    }
                  },
                  "2": {
                    "summary": "decoding token error",
                    "value": {
                      "error": 1005
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403 token err",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "expired token",
                    "value": {
                      "error": 1006
                    }
                  },
                  "2": {
                    "summary": "validate token error",
                    "value": {
                      "error": 1007
                    }
                  },
                  "3": {
                    "summary": "invalid token",
                    "value": {
                      "error": 1008
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060854-run"
      }
    },
    "/api/neuron/password": {
      "post": {
        "summary": "Update password",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Update password",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "old_pass": {
                    "type": "string"
                  },
                  "new_pass": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "old_pass",
                  "new_pass"
                ],
                "x-apifox-orders": [
                  "name",
                  "old_pass",
                  "new_pass"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "admin",
                "old_pass": "01234",
                "new_pass": "56789"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 token err",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "missing token",
                    "value": {
                      "error": 1004
                    }
                  },
                  "2": {
                    "summary": "decoding token error",
                    "value": {
                      "error": 1005
                    }
                  },
                  "3": {
                    "summary": "password length too short or too long",
                    "value": {
                      "error": 1012
                    }
                  },
                  "4": {
                    "summary": "duplicate password",
                    "value": {
                      "error": 1013
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "token err",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "expired token",
                    "value": {
                      "error": 1006
                    }
                  },
                  "2": {
                    "summary": "validate token error",
                    "value": {
                      "error": 1007
                    }
                  },
                  "3": {
                    "summary": "invalid token",
                    "value": {
                      "error": 1008
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060855-run"
      }
    },
    "/api/neuron/ping": {
      "post": {
        "summary": "Ping",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Ping",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060856-run"
      }
    },
    "/api/neuron/node": {
      "post": {
        "summary": "Add Node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Add Node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "plugin name",
                    "type": "string",
                    "title": "node name"
                  },
                  "plugin": {
                    "type": "string",
                    "title": "plugin name"
                  }
                },
                "required": [
                  "name",
                  "plugin"
                ],
                "x-apifox-orders": [
                  "name",
                  "plugin"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-tcp-node",
                "plugin": "Modbus TCP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "node type invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node type invalid",
                    "value": {
                      "error": 2001
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "library not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library not found",
                    "value": {
                      "error": 2301
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "node exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060857-run"
      },
      "delete": {
        "summary": "Del node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Delete node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/neuron-error"
              },
              "example": {
                "name": "modbus-tcp-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060858-run"
      },
      "get": {
        "summary": "Get node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "node name"
                  }
                },
                "required": [
                  "name"
                ],
                "x-apifox-orders": [
                  "name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-tcp-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060859-run"
      },
      "put": {
        "summary": "Update node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Update node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "new_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "new_name"
                ],
                "x-apifox-orders": [
                  "name",
                  "new_name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-node",
                "new_name": "modbus-tcp-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not allow update",
                    "value": {
                      "error": 2013
                    }
                  },
                  "2": {
                    "summary": "node name is empty",
                    "value": {
                      "error": 2015
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "node exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "internal server error",
                    "value": {
                      "error": 1001
                    }
                  },
                  "2": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060860-run"
      }
    },
    "/api/neuron/node/setting": {
      "get": {
        "summary": "Get Node Setting",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get Node Setting",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node": {
                      "type": "string"
                    },
                    "params": {
                      "type": "object",
                      "x-apifox-orders": [],
                      "properties": {},
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "node",
                    "params"
                  ],
                  "description": "//The parameter fields in json fill in different fields according to different plugins",
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "node": "modbus-node",
                      "params": {
                        "param1": "1.1.1.1",
                        "param2": 502
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060861-run"
      },
      "post": {
        "summary": "Node Setting",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Please refer to [Plugin Setting](./plugin-setting.md) for the configuration parameters of each plugin.",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "param1": {
                        "type": "integer"
                      },
                      "param2": {
                        "type": "string"
                      },
                      "param3": {
                        "type": "boolean"
                      },
                      "param4": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "param1",
                      "param2",
                      "param3",
                      "param4"
                    ],
                    "x-apifox-orders": [
                      "param1",
                      "param2",
                      "param3",
                      "param4"
                    ],
                    "description": "The parameter fields in json fill in different fields according to different plugins",
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "node",
                  "params"
                ],
                "x-apifox-orders": [
                  "node",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "params": {
                  "param1": 1,
                  "param2": "1.1.1.1",
                  "param3": true,
                  "param4": 11.22
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "node setting invalid",
                    "value": {
                      "error": 2004
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060862-run"
      }
    },
    "/api/neuron/node/ctl": {
      "post": {
        "summary": "Node CTL",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "cmd": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "0 start, 1 stop"
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "cmd"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "cmd": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not ready",
                    "value": {
                      "error": 2006
                    }
                  },
                  "2": {
                    "summary": "node is running",
                    "value": {
                      "error": 2007
                    }
                  },
                  "3": {
                    "summary": "node not running",
                    "value": {
                      "error": 2008
                    }
                  },
                  "4": {
                    "summary": "node is stopped",
                    "value": {
                      "error": 2009
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060863-run"
      }
    },
    "/api/neuron/node/state": {
      "get": {
        "summary": "Get Node State",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "states": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "node": {
                            "type": "string",
                            "description": "node name"
                          },
                          "running": {
                            "type": "integer",
                            "description": "running state"
                          },
                          "link": {
                            "type": "integer",
                            "description": "link state"
                          },
                          "rtt": {
                            "type": "integer",
                            "description": "average round trip time communicating with devices"
                          }
                        },
                        "x-apifox-orders": [
                          "node",
                          "running",
                          "link",
                          "rtt"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "states"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "states": [
                        {
                          "node": "modbus-node1",
                          "running": 2,
                          "link": 1,
                          "rtt": 100
                        },
                        {
                          "node": "modbus-node2",
                          "running": 1,
                          "link": 0,
                          "rtt": 9999
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060864-run"
      }
    },
    "/api/neuron/group": {
      "post": {
        "summary": "Add Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "group name"
                  },
                  "node": {
                    "type": "string",
                    "description": "node name"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "read/upload interval(ms)"
                  }
                },
                "x-apifox-orders": [
                  "name",
                  "node",
                  "interval"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "gconfig1",
                "node": "modbus-node",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "group not allow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "group not allow",
                    "value": {
                      "error": 2103
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060865-run"
      },
      "delete": {
        "summary": "Del Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "group name"
                  },
                  "node": {
                    "type": "string",
                    "description": "node name"
                  }
                },
                "x-apifox-orders": [
                  "name",
                  "node"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "gconfig1",
                "node": "modbus-node",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "group already subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group already subscribed",
                    "value": {
                      "error": 2101
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060866-run"
      },
      "put": {
        "summary": "Update Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "node name"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "new_name": {
                    "type": "string",
                    "description": "group new name"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "read/upload interval(ms)"
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "group",
                  "new_name",
                  "interval"
                ],
                "required": [
                  "node",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "group": "gconfig1",
                "new_name": "group1",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "group exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group exist",
                    "value": {
                      "error": 2104
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060867-run"
      },
      "get": {
        "summary": "Get Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          },
                          "tag_count": {
                            "type": "integer"
                          }
                        },
                        "x-apifox-orders": [
                          "name",
                          "interval",
                          "tag_count"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "groups"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "groups": [
                        {
                          "name": "config_modbus_tcp_sample_2",
                          "interval": 2000,
                          "tag_count": 0
                        },
                        {
                          "name": "gconfig1",
                          "interval": 10000,
                          "tag_count": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060868-run"
      }
    },
    "/api/neuron/tags": {
      "post": {
        "summary": "Add Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "tag name"
                        },
                        "address": {
                          "type": "string",
                          "description": "tag address"
                        },
                        "attribute": {
                          "type": "integer",
                          "description": "tag attribute"
                        },
                        "type": {
                          "type": "integer",
                          "description": "tag type"
                        },
                        "precision": {
                          "type": "integer",
                          "optional": true,
                          "description": "optional, float/double precision, optional(0-17)"
                        },
                        "decimal": {
                          "type": "integer",
                          "optional": true,
                          "description": "optional, decimal"
                        },
                        "description": {
                          "type": "string",
                          "optional": true,
                          "description": "optional, description"
                        },
                        "value": {
                          "type": "number",
                          "optional": true,
                          "description": "optional, when the attribute is static,the value field needs to be added."
                        }
                      },
                      "x-apifox-orders": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "precision",
                        "decimal",
                        "description",
                        "value"
                      ],
                      "required": [
                        "name",
                        "address",
                        "attribute",
                        "type"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tags"
                ],
                "required": [
                  "node",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "group": "config_modbus_tcp_sample_2",
                "tags": [
                  {
                    "name": "tag1",
                    "address": "1!400001",
                    "attribute": 8,
                    "type": 4,
                    "precision": 0,
                    "decimal": 0,
                    "description": "",
                    "value": 12
                  },
                  {
                    "name": "tag2",
                    "address": "1!00001",
                    "attribute": 3,
                    "type": 3,
                    "decimal": 0.01
                  },
                  {
                    "name": "tag3",
                    "address": "1!400009",
                    "attribute": 3,
                    "type": 9,
                    "precision": 3
                  },
                  {
                    "name": "static_tag",
                    "address": "",
                    "attribute": 10,
                    "type": 1,
                    "description": "It is a static tag",
                    "value": 42
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "index",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "index",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "index": 1,
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  },
                  "2": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "3": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "4": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060869-run"
      },
      "get": {
        "summary": "Get Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node.string",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "tag type",
                            "type": "string"
                          },
                          "type": {
                            "description": "tag address",
                            "type": "integer"
                          },
                          "address": {
                            "description": "tag attribute",
                            "type": "string"
                          },
                          "attribute": {
                            "description": "description",
                            "type": "integer"
                          },
                          "description": {
                            "description": "float/double precision",
                            "type": "string"
                          },
                          "precision": {
                            "description": "decimal",
                            "type": "integer"
                          },
                          "decimal": {
                            "description": "optional, when the attribute is static",
                            "type": "integer"
                          },
                          "value": {
                            "type": "integer"
                          },
                          "precison": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "decimal",
                          "precison"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "precision",
                          "decimal",
                          "value",
                          "precison"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "tags"
                  ],
                  "x-apifox-orders": [
                    "tags"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "tags": [
                        {
                          "name": "tag1",
                          "type": 8,
                          "address": "1!400001",
                          "attribute": 0,
                          "description": "",
                          "precision": 0,
                          "decimal": 0,
                          "value": 12
                        },
                        {
                          "name": "tag2",
                          "type": 6,
                          "address": "1!400002",
                          "attribute": 0,
                          "description": "",
                          "precision": 0,
                          "decimal": 0
                        },
                        {
                          "name": "static_tag",
                          "address": "",
                          "attribute": 10,
                          "type": 8,
                          "description": "",
                          "precision": 0,
                          "decimal": 0,
                          "value": 42
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060870-run"
      },
      "put": {
        "summary": "Update Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "description": "node name",
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "tag name",
                          "type": "string"
                        },
                        "type": {
                          "description": "tag type",
                          "type": "integer"
                        },
                        "attribute": {
                          "description": "tag attribute",
                          "type": "integer"
                        },
                        "address": {
                          "description": "tag address",
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "precision": {
                          "description": "float/double precison",
                          "type": "integer"
                        },
                        "decimal": {
                          "type": "integer"
                        },
                        "value": {
                          "type": "integer",
                          "description": "optional, when the attribute is static,the value field needs to be added."
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "attribute",
                        "address",
                        "description",
                        "decimal",
                        "precision"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "type",
                        "attribute",
                        "address",
                        "description",
                        "precision",
                        "decimal",
                        "value"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": "{\n    \"node\": \"modbus-tcp-test\",\n    \"group\": \"group1\",\n    \"tags\": [\n        {\n            \"name\": \"tag1\",\n            \"type\": 8,\n            \"attribute\": 0,\n            \"address\": \"1!400001\",\n            \"description\": \"\",\n            \"precision\": 0,\n            \"decimal\": 0,\n            \"value\": 12\n        },\n        {\n            \"name\": \"tag2\",\n            \"type\": 6,\n            \"attribute\": 0,\n            \"address\": \"1!400002\",\n            \"description\": \"\",\n            \"precison\": 0,\n            \"decimal\": 0,\n        },\n        {\n            \"name\": \"static_tag\",\n            \"address\": \"\",\n            \"attribute\": 10,\n            \"type\": 8,\n            \"description\": \"\",\n            \"precison\": 0,\n            \"decimal\": 0,\n            \"value\": 42\n        }\n    ]\n}"
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    },
                    "index": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error",
                    "index"
                  ],
                  "x-apifox-orders": [
                    "error",
                    "index"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0,
                      "index": 1
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "206",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag not exist",
                    "value": {
                      "error": 2201
                    }
                  },
                  "2": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  },
                  "3": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "4": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "5": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "neuron node/group 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060871-run"
      },
      "delete": {
        "summary": "Del Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "description": "group name",
                    "type": "string"
                  },
                  "node": {
                    "description": "node name",
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "tag name"
                  }
                },
                "required": [
                  "group",
                  "node",
                  "tags"
                ],
                "x-apifox-orders": [
                  "group",
                  "node",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "group": "config_modbus_tcp_sample_2",
                "node": "modbus-node",
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060872-run"
      }
    },
    "/api/neuron/plugin": {
      "post": {
        "summary": "Add Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "library": {
                    "type": "string",
                    "description": "plugin library name"
                  },
                  "schema_file": {
                    "type": "string",
                    "description": "base64 encode string of schema file content"
                  },
                  "so_file": {
                    "type": "string",
                    "description": "base64 encode string of so file content"
                  }
                },
                "required": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-orders": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "library info invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library info invalid",
                    "value": {
                      "error": 2302
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060873-run"
      },
      "put": {
        "summary": "Update Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "library": {
                    "type": "string",
                    "description": "plugin library name"
                  },
                  "schema_file": {
                    "type": "string",
                    "description": "base64 encode string of schema file content"
                  },
                  "so_file": {
                    "type": "string",
                    "description": "base64 encode string of so file content"
                  }
                },
                "required": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-orders": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "library info invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library info invalid",
                    "value": {
                      "error": 2302
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060873-1-run"
      },
      "delete": {
        "summary": "Del Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plugin": {
                    "type": "string",
                    "description": "plugin name"
                  }
                },
                "required": [
                  "plugin"
                ],
                "x-apifox-orders": [
                  "plugin"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060874-run"
      },
      "get": {
        "summary": "Get Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "plugin",
            "in": "query",
            "description": "plugin name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "description": "plugin kind",
                            "type": "integer"
                          },
                          "node_type": {
                            "type": "integer"
                          },
                          "version": {
                            "type": "string",
                            "description": "plugin version"
                          },
                          "name": {
                            "type": "string",
                            "description": "plugin name"
                          },
                          "library": {
                            "type": "string",
                            "description": "plugin library name"
                          },
                          "description": {
                            "type": "string"
                          },
                          "description_zh": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "node_type",
                          "version",
                          "name",
                          "library",
                          "description",
                          "description_zh",
                          "schema"
                        ],
                        "x-apifox-orders": [
                          "kind",
                          "node_type",
                          "version",
                          "name",
                          "library",
                          "description",
                          "description_zh",
                          "schema"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "plugins"
                  ],
                  "x-apifox-orders": [
                    "plugins"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "plugins": [
                        {
                          "kind": 1,
                          "node_type": 1,
                          "name": "Modbus TCP",
                          "library": "libplugin-modbus-tcp.so",
                          "description": "description",
                          "description_zh": "描述",
                          "schema": "modbus-tcp"
                        },
                        {
                          "kind": 1,
                          "node_type": 2,
                          "name": "MQTT",
                          "library": "libplugin-mqtt.so",
                          "description": "Neuron northbound MQTT plugin bases on NanoSDK.",
                          "description_zh": "基于 NanoSDK 的 Neuron 北向应用 MQTT 插件",
                          "schema": "mqtt"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060875-run"
      }
    },
    "/api/neuron/schema": {
      "get": {
        "summary": "Get Plugin Schema",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "schema_name",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag_regex": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer"
                          },
                          "regex": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "regex"
                        ],
                        "x-apifox-orders": [
                          "type",
                          "regex"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    },
                    "group_interval": {
                      "type": "integer"
                    },
                    "connection_mode": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "key",
                                  "value"
                                ],
                                "x-apifox-orders": [
                                  "key",
                                  "value"
                                ],
                                "x-apifox-ignore-properties": []
                              }
                            }
                          },
                          "required": [
                            "map"
                          ],
                          "x-apifox-orders": [
                            "map"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "interval": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "host": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "regex": {
                              "type": "string"
                            },
                            "length": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "regex",
                            "length"
                          ],
                          "x-apifox-orders": [
                            "regex",
                            "length"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "port": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "timeout": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "tag_regex",
                    "group_interval",
                    "connection_mode",
                    "interval",
                    "host",
                    "port",
                    "timeout"
                  ],
                  "x-apifox-orders": [
                    "tag_regex",
                    "group_interval",
                    "connection_mode",
                    "interval",
                    "host",
                    "port",
                    "timeout"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "tag_regex": [
                        {
                          "type": 3,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 4,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 5,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 6,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 7,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 8,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 9,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 10,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 11,
                          "regex": "^[0-9]+!([0-1][0-9]+|[3-4][0-9]+\\.([0-9]|[0-1][0-5]))$"
                        },
                        {
                          "type": 13,
                          "regex": "^[0-9]+![3-4][0-9]+\\.[0-9]+(H|L|)$"
                        }
                      ],
                      "group_interval": 1000,
                      "connection_mode": {
                        "name": "Connection Mode",
                        "name_zh": "连接模式",
                        "description": "Neuron as the client, or as the server",
                        "description_zh": "Neuron 作为客户端或服务端",
                        "attribute": "required",
                        "type": "map",
                        "default": 0,
                        "valid": {
                          "map": [
                            {
                              "key": "Client",
                              "value": 0
                            },
                            {
                              "key": "Server",
                              "value": 1
                            }
                          ]
                        }
                      },
                      "interval": {
                        "name": "Send Interval",
                        "name_zh": "指令发送间隔",
                        "description": "Send reading instruction interval(ms)",
                        "description_zh": "发送读指令时间间隔，单位为毫秒",
                        "attribute": "required",
                        "type": "int",
                        "default": 20,
                        "valid": {
                          "min": 0,
                          "max": 3000
                        }
                      },
                      "host": {
                        "name": "IP Address",
                        "name_zh": "IP地址",
                        "description": "Local IP in server mode, remote device IP in client mode",
                        "description_zh": "服务端模式中填写本地 IP，客户端模式中填写目标设备 IP",
                        "attribute": "required",
                        "type": "string",
                        "valid": {
                          "regex": "/^((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)$/",
                          "length": 30
                        }
                      },
                      "port": {
                        "name": "Port",
                        "name_zh": "端口号",
                        "description": "Local port in server mode, remote device port in client mode",
                        "description_zh": "服务端模式中填写本地端口号，客户端模式中填写远程设备端口号",
                        "attribute": "required",
                        "type": "int",
                        "default": 502,
                        "valid": {
                          "min": 1,
                          "max": 65535
                        }
                      },
                      "timeout": {
                        "name": "Connection Timeout",
                        "name_zh": "连接超时时间",
                        "description": "Connection timeout(ms)",
                        "description_zh": "连接超时时间，单位为毫秒",
                        "attribute": "required",
                        "type": "int",
                        "default": 3000,
                        "valid": {
                          "min": 1000,
                          "max": 65535
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060876-run"
      }
    },
    "/api/neuron/subscribe": {
      "post": {
        "summary": "Subscribe",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "driver name",
                    "type": "string"
                  },
                  "group": {
                    "description": "driver node group name",
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                        "type": "string"
                      }
                    },
                    "description": "when using the MQTT plugin, the topic field needs to be added",
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "driver": "modbus-tcp",
                "group": "group-1",
                "params": {
                  "topic": "/neuron/mqtt/group-1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060877-run"
      },
      "put": {
        "summary": "Update Subscribe Parameters",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "deliver name",
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "driver node group name"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "type": "string",
                        "description": "when using the MQTT plugin, the topic key is the upload topic"
                      }
                    },
                    "required": [
                      "topic"
                    ],
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060878-run"
      },
      "delete": {
        "summary": "UnSubscribe",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "driver  name",
                    "type": "string"
                  },
                  "group": {
                    "description": "driver node group name",
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                        "type": "string"
                      }
                    },
                    "required": [
                      "topic"
                    ],
                    "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "driver": "modbus-tcp",
                "group": "group-1",
                "params": {
                  "topic": "/neuron/mqtt/group-1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060879-run"
      },
      "get": {
        "summary": "Get Subscribe Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "app",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "driver": {
                            "description": "deliver name",
                            "type": "string"
                          },
                          "group": {
                            "description": "group name",
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "properties": {
                              "topic": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "topic"
                            ],
                            "description": "when using the MQTT plugin, the topic field needs to be added",
                            "x-apifox-orders": [
                              "topic"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "required": [
                          "driver",
                          "group",
                          "params"
                        ],
                        "x-apifox-orders": [
                          "driver",
                          "group",
                          "params"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "x-apifox-orders": [
                    "groups"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "groups": [
                        {
                          "driver": "modbus-tcp",
                          "group": "group-1",
                          "params": {
                            "topic": "/neuron/mqtt/group-1"
                          }
                        },
                        {
                          "driver": "modbus-tcp",
                          "group": "group-2",
                          "params": {
                            "topic": "/neuron/mqtt/group-2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060880-run"
      }
    },
    "/api/neuron/subscribes": {
      "post": {
        "summary": "Subscribe Multiple Groups",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "string",
                    "description": "app n"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "driver": {
                          "description": "deliver name",
                          "type": "string"
                        },
                        "group": {
                          "description": "group name",
                          "type": "string"
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "topic": {
                              "description": "when using the MQTT plugin, the topic key is the upload topoic",
                              "type": "string"
                            }
                          },
                          "required": [
                            "topic"
                          ],
                          "description": "optional, depends on plugins",
                          "x-apifox-orders": [
                            "topic"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "driver",
                        "group",
                        "params"
                      ],
                      "x-apifox-orders": [
                        "driver",
                        "group",
                        "params"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "app",
                  "groups"
                ],
                "x-apifox-orders": [
                  "app",
                  "groups"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "groups": [
                  {
                    "driver": "modbus1",
                    "group": "group1",
                    "params": {
                      "topic": "/neuron/mqtt/modbus1/group1"
                    }
                  },
                  {
                    "driver": "modbus2",
                    "group": "group2",
                    "params": {
                      "topic": "/neuron/mqtt/modbus2/group2"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "suceess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060881-run"
      }
    },
    "/api/neuron/version": {
      "get": {
        "summary": "Get Version",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "build_date": {
                      "type": "string"
                    },
                    "revision": {
                      "description": "dirty indicates uncommit changes",
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "build_date",
                    "revision",
                    "version"
                  ],
                  "x-apifox-orders": [
                    "build_date",
                    "revision",
                    "version"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "build_date": "2022-06-01",
                      "revision": "99e2184+dirty",
                      "version": "2.4.0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060882-run"
      }
    },
    "/api/neuron/license": {
      "post": {
        "summary": "Upload License",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "license": {
                    "type": "string"
                  }
                },
                "required": [
                  "license"
                ],
                "x-apifox-orders": [
                  "license"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "license": "-----BEGIN CERTIFICATE-----\nMIID2TCCAsGgAwIBAgIEATSJqjA....."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": " license invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "license invalid",
                    "value": {
                      "error": 2401
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060883-run"
      },
      "get": {
        "summary": "Get License Info",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid_until": {
                      "type": "string"
                    },
                    "valid_since": {
                      "type": "string"
                    },
                    "valid": {
                      "type": "boolean"
                    },
                    "max_nodes": {
                      "type": "integer"
                    },
                    "max_node_tags": {
                      "type": "integer"
                    },
                    "used_nodes": {
                      "type": "integer"
                    },
                    "used_tags": {
                      "type": "integer"
                    },
                    "license_type": {
                      "type": "string"
                    },
                    "error": {
                      "type": "integer"
                    },
                    "enabled_plugins": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hardware_token": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "valid_until",
                    "valid_since",
                    "valid",
                    "max_nodes",
                    "max_node_tags",
                    "used_nodes",
                    "used_tags",
                    "license_type",
                    "error",
                    "enabled_plugins",
                    "hardware_token",
                    "object",
                    "email_address"
                  ],
                  "x-apifox-orders": [
                    "valid_until",
                    "valid_since",
                    "valid",
                    "max_nodes",
                    "max_node_tags",
                    "used_nodes",
                    "used_tags",
                    "license_type",
                    "error",
                    "enabled_plugins",
                    "hardware_token",
                    "object",
                    "email_address"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "valid_until": "2023-03-15 08:11:19",
                      "valid_since": "2022-03-15 08:11:19",
                      "valid": false,
                      "max_nodes": 1,
                      "max_node_tags": 1,
                      "used_nodes": 12,
                      "used_tags": 846,
                      "license_type": "retail",
                      "error": 0,
                      "enabled_plugins": [
                        "MODBUS TCP Advance",
                        "OPC UA"
                      ],
                      "hardware_token": "I+kZidSifiyVSbz0/EgcM6AcefnlfR4IU19ZZUnTS18=",
                      "object": "emq",
                      "email_address": "emq@emqx.io"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": " license not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "license not found",
                    "value": {
                      "error": 2400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060884-run"
      }
    },
    "/api/neuron/logs": {
      "get": {
        "summary": "Download log files",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "file not exist",
                    "value": {
                      "error": 1011
                    }
                  },
                  "2": {
                    "summary": "command execution failed",
                    "value": {
                      "error": 1014
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060885-run"
      }
    },
    "/api/neuron/log/level": {
      "put": {
        "summary": "Update node log level",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Call the api to modify the log level of the node to debug, and automatically switch to the default level in about ten minutes.",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "node_name"
                ],
                "x-apifox-orders": [
                  "node_name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "server is busy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060886-run"
      }
    },
    "/api/neuron/file": {
      "get": {
        "summary": "Download File",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "description": "absolute path of the file",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "file not exist",
                    "value": {
                      "error": 1011
                    }
                  },
                  "2": {
                    "summary": "file open failure",
                    "value": {
                      "error": 4101
                    }
                  },
                  "3": {
                    "summary": "file read failure",
                    "value": {
                      "error": 4102
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060887-run"
      }
    },
    "/api/neuron/file/info": {
      "get": {
        "summary": "Get file list information",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "dir_path",
            "in": "query",
            "description": "absolute path of the directory.",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "ctime": {
                            "type": "string"
                          },
                          "mtime": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "size",
                          "ctime",
                          "mtime"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "size",
                          "ctime",
                          "mtime"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "files"
                  ],
                  "x-apifox-orders": [
                    "files"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "files": [
                        {
                          "name": "neuron",
                          "size": 4096,
                          "ctime": "Wed Jan  4 02:38:12 2023",
                          "mtime": "Mon Dec 26 09:48:42 2022"
                        },
                        {
                          "name": "test.txt",
                          "size": 13,
                          "ctime": "Wed Jan  4 02:38:12 2023",
                          "mtime": "Mon Dec 26 09:48:42 2022"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "file not exist",
                    "value": {
                      "error": 1011
                    }
                  },
                  "2": {
                    "summary": "file open failure",
                    "value": {
                      "error": 4101
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060888-run"
      }
    },
    "/api/neuron/template": {
      "post": {
        "summary": "Add Template",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "plugin": {
                    "type": "string"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "interval": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "integer"
                              },
                              "address": {
                                "type": "string"
                              },
                              "attribute": {
                                "type": "integer"
                              },
                              "precison": {
                                "type": "integer"
                              },
                              "decimal": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "address",
                              "attribute"
                            ],
                            "x-apifox-orders": [
                              "name",
                              "type",
                              "address",
                              "attribute",
                              "precison",
                              "decimal"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "name",
                        "interval",
                        "tags"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "name",
                  "plugin",
                  "groups"
                ],
                "x-apifox-orders": [
                  "name",
                  "plugin",
                  "groups"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "rtu template",
                "plugin": "Modbus RTU",
                "groups": [
                  {
                    "name": "group1",
                    "interval": 2000,
                    "tags": [
                      {
                        "name": "tag1",
                        "type": 4,
                        "address": "1!400001",
                        "attribute": 1,
                        "precison": 1,
                        "decimal": 0
                      },
                      {
                        "name": "tag2",
                        "type": 11,
                        "address": "1!400009",
                        "attribute": 3
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "206",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "2": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "3": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  },
                  "4": {
                    "summary": "tag name too long",
                    "value": {
                      "error": 2206
                    }
                  },
                  "5": {
                    "summary": "tag address too long",
                    "value": {
                      "error": 2207
                    }
                  },
                  "6": {
                    "summary": "tag description too long",
                    "value": {
                      "error": 2208
                    }
                  },
                  "7": {
                    "summary": "tag precision invalid",
                    "value": {
                      "error": 2209
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group parameter invalid",
                    "value": {
                      "error": 2105
                    }
                  },
                  "2": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "3": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  },
                  "4": {
                    "summary": "plugin name too long",
                    "value": {
                      "error": 3013
                    }
                  },
                  "5": {
                    "summary": "plugin does not support template",
                    "value": {
                      "error": 3016
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "plugin not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "plugin not found",
                    "value": {
                      "error": 3014
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group exist",
                    "value": {
                      "error": 2104
                    }
                  },
                  "2": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  },
                  "3": {
                    "summary": "template already exists",
                    "value": {
                      "error": 2500
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          },
          "x-500:server is busy": {
            "description": "server is busy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060889-run"
      },
      "delete": {
        "summary": "Del Template",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "optional, name of the template to delete. If not specified, then delete all templates.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "server is busy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060890-run"
      },
      "get": {
        "summary": "Get Template",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name of a particular template.",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Without the **name** request parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "templates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "plugin": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "plugin"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "plugin"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "templates"
                  ],
                  "x-apifox-orders": [
                    "templates"
                  ],
                  "description": "Without the **name** request parameter, return all templates.",
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Without the **name** request parameter, return all templates.",
                    "value": {
                      "templates": [
                        {
                          "name": "template1",
                          "plugin": "modbus tcp"
                        },
                        {
                          "name": "template2",
                          "plugin": "opc ua"
                        }
                      ]
                    }
                  },
                  "2": {
                    "summary": "When the **name** request parameter is specified, return detail information of the template of the g",
                    "value": {
                      "name": "rtu template",
                      "plugin": "Modbus RTU",
                      "groups": [
                        {
                          "name": "group1",
                          "interval": 2000,
                          "tags": [
                            {
                              "name": "tag1",
                              "type": 4,
                              "address": "1!400001",
                              "attribute": 1,
                              "precison": 1,
                              "decimal": 0
                            },
                            {
                              "name": "tag2",
                              "type": 11,
                              "address": "1!400009",
                              "attribute": 3
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": " request param invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": " request param invalid",
                    "value": {
                      "error": 1003
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060891-run"
      }
    },
    "/api/neuron/template/inst": {
      "post": {
        "summary": "Template Instantiation",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "node": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "node"
                ],
                "x-apifox-orders": [
                  "name",
                  "node"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "rtu template",
                "node": "modbus-rtu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library failed to open",
                    "value": {
                      "error": 2304
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  },
                  "2": {
                    "summary": "library not allow create instance",
                    "value": {
                      "error": 2307
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060892-run"
      }
    },
    "/api/neuron/template/instances": {
      "post": {
        "summary": "Template Multi Node Instantiation",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nodes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "node": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "node"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "node"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "nodes"
                ],
                "x-apifox-orders": [
                  "nodes"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "nodes": [
                  {
                    "name": "rtu template",
                    "node": "node1"
                  },
                  {
                    "name": "tcp template",
                    "node": "node2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library failed to open",
                    "value": {
                      "error": 2304
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "library not found",
                    "value": {
                      "error": 2301
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  },
                  "2": {
                    "summary": "library not allow create instance",
                    "value": {
                      "error": 2307
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060893-run"
      }
    },
    "/api/neuron/template/group": {
      "post": {
        "summary": "Add Template Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "integer"
                  }
                },
                "required": [
                  "template",
                  "group",
                  "interval"
                ],
                "x-apifox-orders": [
                  "template",
                  "group",
                  "interval"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group parameter invalid",
                    "value": {
                      "error": 2105
                    }
                  },
                  "2": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "3": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "group exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group exist",
                    "value": {
                      "error": 2104
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060894-run"
      },
      "delete": {
        "summary": "Del Template Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  }
                },
                "required": [
                  "template",
                  "group"
                ],
                "x-apifox-orders": [
                  "template",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060895-run"
      },
      "put": {
        "summary": "Update Template Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "interval(ms)"
                  },
                  "new_name": {
                    "type": "string",
                    "description": "group new name"
                  }
                },
                "required": [
                  "template",
                  "group",
                  "interval",
                  "new_name"
                ],
                "x-apifox-orders": [
                  "template",
                  "group",
                  "interval",
                  "new_name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "template": "modbus-template",
                "group": "gconfig1",
                "new_name": "group1",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group parameter invalid",
                    "value": {
                      "error": 2105
                    }
                  },
                  "2": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "3": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060896-run"
      },
      "get": {
        "summary": "Get Template Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name of the template.",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          },
                          "tag_count": {
                            "type": "integer"
                          }
                        },
                        "x-apifox-orders": [
                          "name",
                          "interval",
                          "tag_count"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "x-apifox-orders": [
                    "groups"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "groups": [
                        {
                          "name": "group1",
                          "interval": 2000,
                          "tag_count": 2
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "request param invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "request param invalid",
                    "value": {
                      "error": 1003
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060897-run"
      }
    },
    "/api/neuron/template/tag": {
      "post": {
        "summary": "Add Template Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "integer"
                        },
                        "precision": {
                          "type": "integer"
                        },
                        "decimal": {
                          "type": [
                            "integer",
                            "number"
                          ]
                        },
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "decimal"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "precision",
                        "decimal",
                        "description",
                        "value"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "template": "modbus-template",
                "group": "group1",
                "tags": [
                  {
                    "name": "tag1",
                    "address": "1!400001",
                    "attribute": 8,
                    "type": 4,
                    "precision": 0,
                    "decimal": 0,
                    "description": "",
                    "value": 12
                  },
                  {
                    "name": "tag2",
                    "address": "1!00001",
                    "attribute": 3,
                    "type": 3,
                    "decimal": 0.01
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "index",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "index",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "index": 2,
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "206",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "2": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "3": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  },
                  "4": {
                    "summary": "tag name too long",
                    "value": {
                      "error": 2206
                    }
                  },
                  "5": {
                    "summary": "tag address too long",
                    "value": {
                      "error": 2207
                    }
                  },
                  "6": {
                    "summary": "tag description too long",
                    "value": {
                      "error": 2208
                    }
                  },
                  "7": {
                    "summary": "tag precision invalid",
                    "value": {
                      "error": 2209
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "tag name conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060898-run"
      },
      "put": {
        "summary": "Update Template Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "integer"
                        },
                        "precision": {
                          "type": "integer"
                        },
                        "decimal": {
                          "type": [
                            "integer",
                            "number"
                          ]
                        },
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "decimal"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "precision",
                        "decimal",
                        "description",
                        "value"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "template": "modbus-template",
                "group": "group1",
                "tags": [
                  {
                    "name": "tag1",
                    "address": "1!400001",
                    "attribute": 8,
                    "type": 4,
                    "precision": 0,
                    "decimal": 0,
                    "description": "",
                    "value": 12
                  },
                  {
                    "name": "tag2",
                    "address": "1!00001",
                    "attribute": 3,
                    "type": 3,
                    "decimal": 0.01
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "index",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "index",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "index": 2,
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "206",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "2": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "3": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  },
                  "4": {
                    "summary": "tag name too long",
                    "value": {
                      "error": 2206
                    }
                  },
                  "5": {
                    "summary": "tag address too long",
                    "value": {
                      "error": 2207
                    }
                  },
                  "6": {
                    "summary": "tag description too long",
                    "value": {
                      "error": 2208
                    }
                  },
                  "7": {
                    "summary": "tag precision invalid",
                    "value": {
                      "error": 2209
                    }
                  },
                  "8": {
                    "summary": "tag not exist",
                    "value": {
                      "error": 2201
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060899-run"
      },
      "delete": {
        "summary": "Del Template Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "template",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "template": "modbus-template",
                "group": "group1",
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "tag name too long",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "tag name too long",
                    "value": {
                      "error": 2206
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group name too long",
                    "value": {
                      "error": 2107
                    }
                  },
                  "2": {
                    "summary": "template name too long",
                    "value": {
                      "error": 2502
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060900-run"
      },
      "get": {
        "summary": "Get Template Tag ",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "description": " name of the template.",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "name of the group.",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "integer"
                          },
                          "address": {
                            "type": "string"
                          },
                          "attribute": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "precision": {
                            "type": "integer"
                          },
                          "decimal": {
                            "type": "integer"
                          },
                          "value": {
                            "type": "integer"
                          },
                          "precison": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "decimal"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "precision",
                          "decimal",
                          "value",
                          "precison"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "tags",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error",
                    "tags"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "tags": [
                        {
                          "name": "tag1",
                          "type": 4,
                          "address": "1!400001",
                          "attribute": 8,
                          "description": "",
                          "precision": 0,
                          "decimal": 0,
                          "value": 12
                        },
                        {
                          "name": "tag2",
                          "type": 14,
                          "address": "1!00001",
                          "attribute": 3,
                          "description": "",
                          "precison": 0,
                          "decimal": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "request param invalid",
                    "value": {
                      "error": 1003
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  },
                  "2": {
                    "summary": "template not found",
                    "value": {
                      "error": 2501
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  },
                  "2": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060901-run"
      }
    },
    "/api/neuron/scan/tags": {
      "get": {
        "summary": "Scan Server Tags",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": true,
            "example": "ua01",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Node address",
            "required": false,
            "example": "0!86",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer",
                      "description": "error code"
                    },
                    "total": {
                      "type": "integer",
                      "description": "total tags"
                    },
                    "type":{
                      "type": "integer",
                      "description": "tag type"
                    },
                    "is_array": {
                      "type": "integer",
                      "description": "is array"
                    },
                    "tags": {
                      "type": "array", 
                      "description" : "tags",
                      "items": {
                       "type": "object",
                       "properties": {
                        "name": {
                          "type": "string",
                          "description": "tag name"
                        },
                        "id": {
                          "type": "string",
                          "description": "tag id"
                        },
                        "tag": {
                          "type": "integer",
                          "description": "tag address"
                        }
                       } 
                      }
                    }
                  },
                  "required": [
                    "error",
                    "total",
                    "type",
                    "is_array",
                    "tags"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0,
                      "total": 3,
                      "type": 15,
                      "is_array": false,
                      "tags": [
                        {
                          "name": "Objects",
                          "id": "0!85",
                          "tag": 1
                        },
                        {
                          "name": "Types",
                          "id": "0!86",
                          "tag": 1
                        },
                        {
                          "name": "Views",
                          "id": "0!87",
                          "tag": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/neuron/metrics": {
      "get": {
        "summary": "Get Metrics",
        "x-apifox-folder": "Neuron/metrics",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/metrics"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "one of `global`, `driver` and `app`",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "query",
            "description": "filter with node name, only meaningful when `category=driver` or `category=app`",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": "# HELP core_dumped Whether there is any core dump\n# TYPE core_dumped gauge\ncore_dumped 0\n# HELP uptime_seconds Uptime in seconds\n# TYPE uptime_seconds counter\nuptime_seconds 314\n# HELP north_nodes_total Number of north nodes\n# TYPE north_nodes_total gauge\nnorth_nodes_total 1\n# HELP north_running_nodes_total Number of north nodes in running state\n# TYPE north_running_nodes_total gauge\nnorth_running_nodes_total 1\n# HELP north_disconnected_nodes_total Number of north nodes disconnected\n# TYPE north_disconnected_nodes_total gauge\nnorth_disconnected_nodes_total 1\n# HELP south_nodes_total Number of south nodes\n# TYPE south_nodes_total gauge\nsouth_nodes_total 1\n# HELP south_running_nodes_total Number of south nodes in running state\n# TYPE south_running_nodes_total gauge\nsouth_running_nodes_total 0\n# HELP south_disconnected_nodes_total Number of south nodes disconnected\n# TYPE south_disconnected_nodes_total gauge\nsouth_disconnected_nodes_total 1\n# HELP send_msgs_total Total number of messages sent\n# TYPE send_msgs_total counter\nsend_msgs_total{node=\"data-stream-processing\"} 0\n# HELP send_msg_errors_total Total number of errors sending messages\n# TYPE send_msg_errors_total counter\nsend_msg_errors_total{node=\"data-stream-processing\"} 0\n# HELP recv_msgs_total Total number of messages received\n# TYPE recv_msgs_total counter\nrecv_msgs_total{node=\"data-stream-processing\"} 0\n# HELP last_rtt_ms Last request round trip time in milliseconds\n# TYPE last_rtt_ms gauge\nlast_rtt_ms{node=\"modbus\"} 9999\n# HELP send_bytes Total number of bytes sent\n# TYPE send_bytes gauge\nsend_bytes{node=\"modbus\"} 0\n# HELP recv_bytes Total number of bytes received\n# TYPE recv_bytes gauge\nrecv_bytes{node=\"modbus\"} 0\n# HELP tag_reads_total Total number of tag reads including errors\n# TYPE tag_reads_total counter\ntag_reads_total{node=\"modbus\"} 0\n# HELP tag_read_errors_total Total number of tag read errors\n# TYPE tag_read_errors_total counter\ntag_read_errors_total{node=\"modbus\"} 0\n# HELP group_tags_total Total number of tags in the group\n# TYPE group_tags_total gauge\ngroup_tags_total{node=\"modbus\",group=\"grp\"} 1\n# HELP group_last_send_msgs Number of messages sent on last group timer invocation\n# TYPE group_last_send_msgs gauge\ngroup_last_send_msgs{node=\"modbus\",group=\"grp\"} 0\n# HELP group_last_timer_ms Time in milliseconds consumed on last group timer invocation\n# TYPE group_last_timer_ms gauge\ngroup_last_timer_ms{node=\"modbus\",group=\"grp\"} 0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060902-run"
      }
    },
    "/api/neuron/read": {
      "post": {
        "summary": "Read Tag",
        "x-apifox-folder": "Neuron/rw",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/rw"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "description": "node name",
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  }
                },
                "required": [
                  "node",
                  "group"
                ],
                "x-apifox-orders": [
                  "node",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-tcp-1",
                "group": "config_modbus_tcp_sample_2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "tag name",
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "integer",
                              "boolean"
                            ],
                            "description": "tag  value"
                          },
                          "error": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "value",
                          "error"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "tags"
                  ],
                  "x-apifox-orders": [
                    "tags"
                  ],
                  "description": "The value is displayed only when the value is read correctly, when the value is read incorrectly, the error code is displayed, not the value.",
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060903-run"
      }
    },
    "/api/neuron/write": {
      "post": {
        "summary": "Write One Tag",
        "x-apifox-folder": "Neuron/rw",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/rw"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  },
                  "value": {
                    "type": "integer"
                  }
                },
                "required": [
                  "node",
                  "group",
                  "tag",
                  "value"
                ],
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tag",
                  "value"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-tcp-1",
                "group": "config_modbus_tcp_sample_2",
                "tag": "tag1",
                "value": 1234
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-0"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060904-run"
      }
    },
    "/api/neuron/write/tags": {
      "post": {
        "summary": "Write Multiple Tags",
        "x-apifox-folder": "Neuron/rw",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Multiple tags writing currently only supports Mitsubishi 3E, Beckhoff ADS, Modbus TCP, Modbus RTU, Siemens S7 ISOTCP, Omron FINS TCP, OPC UA, BACnet/IP drivers.",
        "tags": [
          "Neuron/rw"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string"
                        },
                        "value": {
                          "type": [
                            "integer",
                            "string"
                          ]
                        }
                      },
                      "required": [
                        "tag",
                        "value"
                      ],
                      "x-apifox-orders": [
                        "tag",
                        "value"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-tcp-1",
                "group": "group1",
                "tags": [
                  {
                    "tag": "tag1",
                    "value": 123
                  },
                  {
                    "tag": "tag2",
                    "value": 1233
                  },
                  {
                    "tag": "tag3",
                    "value": 7788
                  },
                  {
                    "tag": "tag4",
                    "value": 1
                  },
                  {
                    "tag": "tag5",
                    "value": "asdfda"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/neuron-error"
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3516282/apis/api-123060905-run"
      }
    }
  },
  "components": {
    "schemas": {
      "neuron-error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer"
          }
        },
        "required": [
          "error"
        ],
        "x-apifox-orders": [
          "error"
        ],
        "x-apifox-folder": "Data-schemas",
        "x-apifox-ignore-properties": []
      },
      "neuron-0": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer"
          }
        },
        "required": [
          "error"
        ],
        "x-apifox-orders": [
          "error"
        ],
        "x-apifox-folder": "Data-schemas",
        "x-apifox-ignore-properties": []
      },
      "neuron-token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "x-apifox-orders": [
          "token"
        ],
        "x-apifox-folder": "Data-schemas",
        "x-apifox-ignore-properties": []
      }
    }
  },
  "servers": []
}
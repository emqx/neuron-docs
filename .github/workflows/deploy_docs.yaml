name: Deploy Docs

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'emqx'
    steps:
    - name: clone docs
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: docs-files

    - name: clone frontend
      uses: actions/checkout@v2
      with:
        repository: 'emqx/emqx-io-docs-frontend'
        token: ${{ secrets.CI_GIT_TOKEN }}
        path: frontend

    - name: use node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.15

    - name: use python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'

    - name: set env
      run: |
         BRANCH=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
         if [ "$BRANCH" = "master" ];then
         VERSION="latest"
         else
         VERSION=$BRANCH
         fi
         echo "DOCS_BRANCH=$BRANCH" >> $GITHUB_ENV
         echo "VERSION=$VERSION" >> $GITHUB_ENV
         echo "DOCS_TYPE=neuron" >> $GITHUB_ENV

    - name: remove unused files
      run: |
        cd docs-files
        python3 .ci/remove_unused.py $(pwd)

    - name: move files
      run: |
        rm frontend/docs/en/README.md || true
        rm frontend/docs/zh/README.md || true
        rm frontend/docs/*.md || true
        rm frontend/README.md
        mkdir -p frontend/docs/en/${VERSION}/
        mkdir -p frontend/docs/zh/${VERSION}/
        mkdir -p frontend/docs/.vuepress/public/api/
        cp -r docs-files/en_US/* frontend/docs/en/${VERSION}/
        cp -r docs-files/zh_CN/* frontend/docs/zh/${VERSION}/
        cp docs-files/directory.json frontend/docs/.vuepress/config/directory.json

    - name: generate version config
      run: |
        cd docs-files
        python3 .ci/generate_version.py $(git tag | egrep "v(.*)$" | xargs echo -n) > ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json

    - name: build docs
      run: |
        cd frontend
        yarn && yarn build

    - name: use ossutil
      run: |
        cd frontend/docs/.vuepress/
        wget http://gosspublic.alicdn.com/ossutil/1.7.8/ossutil64
        chmod 755 ./ossutil64
        ./ossutil64 config -e https://oss-accelerate.aliyuncs.com -i ${{ secrets.ALI_OSS_ACCESSKEY_ID }} -k ${{ secrets.ALI_OSS_ACCESSKEY_SECRET }} -L CH

    - name: upload dist
      run: |
        cd frontend/docs/.vuepress/
        ./ossutil64 rm -r oss://neugates-io/docs/zh/${VERSION}/
        ./ossutil64 rm -r oss://neugates-io/docs/en/${VERSION}/
        ./ossutil64 cp -r dist/ oss://neugates-io/docs/ -u

    - name: refresh cdn cache
      uses: Swilder-M/refresh-ali-cdn@v1
      with:
        access_key_id: ${{ secrets.ALI_OSS_ACCESSKEY_ID }}
        access_key_secret: ${{ secrets.ALI_OSS_ACCESSKEY_SECRET }}
        file_paths: https://neugates.io/docs/zh/${VERSION}/ https://neugates.io/docs/en/${VERSION}/

    - name: clone docsearch
      if: env.VERSION == 'latest'
      uses: actions/checkout@v2
      with:
        repository: 'Swilder-M/docsearch-scraper-simple'
        path: docsearch

    - name: Install pipenv
      if: env.VERSION == 'latest'
      run: |
          python -m pip install --upgrade pipenv wheel

    - id: cache-pipenv
      if: env.VERSION == 'latest'
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: install dependencies
      if: env.VERSION == 'latest' && steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        cd docsearch
        pipenv install --keep-outdated

    - name: update current version
      if: env.VERSION == 'latest'
      env:
        APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
        API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
      run: |
        cd docsearch
        pipenv run python -m src.index config ${DOCS_TYPE} ${VERSION}
